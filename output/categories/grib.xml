<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Machine Learning for seasonal climate forecasting (Posts about grib)</title><link>https://nicolasfauchereau.github.io/ML_Seasonal_Forecasting/</link><description></description><atom:link href="https://nicolasfauchereau.github.io/ML_Seasonal_Forecasting/categories/grib.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2018 &lt;a href="mailto:Nicolas.Fauchereau@gmail.com"&gt;Nicolas Fauchereau&lt;/a&gt; </copyright><lastBuildDate>Thu, 15 Nov 2018 20:41:54 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Setting up a conda environment for data processing</title><link>https://nicolasfauchereau.github.io/ML_Seasonal_Forecasting/posts/setting-up-a-conda-environment-for-data-processing/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div&gt;&lt;p&gt;We are using the &lt;a href="http://www.anaconda.com"&gt;anaconda&lt;/a&gt; Python distribution to install the libraries we need and manage our different computing environments. Here I want to share some tips: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A good idea is to &lt;strong&gt;never&lt;/strong&gt; mix in the same environment libraries sourced from the &lt;em&gt;default&lt;/em&gt; conda channel and &lt;em&gt;conda-forge&lt;/em&gt;. I have battled in the past with broken environments, especially when trying to install geospatial python packages (such as geopandas, rasterio, shapely, gdal, etc) exactly for that reason. For a working 'geospatial' environment I found the best is to install &lt;em&gt;everything&lt;/em&gt; from conda-forge (including the foundational packages such as Numpy, Scipy, Pandas etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The latest version of &lt;a href="http://xarray.pydata.org"&gt;xarray&lt;/a&gt; (Version 0.11) now can read grib files using &lt;a href="https://github.com/ecmwf/cfgrib"&gt;cfgrib&lt;/a&gt;. cfgrib itself depends on &lt;a href="https://confluence.ecmwf.int/display/ECC"&gt;eccodes&lt;/a&gt; which is available on the conda-forge channel. So if you do: &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;python
  conda install -c conda-forge eccodes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
  pip install cfgrib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;you should be good to go. &lt;/p&gt;
&lt;p&gt;If xarray + cfgrib somehow doesn't read your grib files, there's a good chance &lt;a href="https://github.com/jswhit/pygrib"&gt;pygrib&lt;/a&gt;, written by &lt;a href="https://www.esrl.noaa.gov/psd/people/jeffrey.s.whitaker/"&gt;Jeffrey Whitaker&lt;/a&gt; will. Again you are in luck as it is available on the &lt;em&gt;conda-forge&lt;/em&gt; channel, so &lt;code&gt;conda install -c conda-forge pygrib&lt;/code&gt; will install pygrib, and you now have two options for reading your grib files. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Below is the list of library we'll be using during the course of the project for all the data management and data processing tasks (i.e. excluding the Machine Learning aspect &lt;em&gt;per-se&lt;/em&gt;): &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://xarray.pydata.org"&gt;xarray&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://intake.readthedocs.io/en/latest/quickstart.html"&gt;intake&lt;/a&gt; and &lt;a href="https://github.com/ContinuumIO/intake-xarray"&gt;intake-xarray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jswhit/pygrib"&gt;pygrib&lt;/a&gt; to read datasets available in grib format&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ecmwf/cfgrib"&gt;cfgrib&lt;/a&gt; same thing ... &lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/cdsapi/"&gt;cdsapi&lt;/a&gt; to download the seasonal forecasts made available on the &lt;a href="https://cds.climate.copernicus.eu"&gt;Copernicus Climate Data Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>conda</category><category>grib</category><guid>https://nicolasfauchereau.github.io/ML_Seasonal_Forecasting/posts/setting-up-a-conda-environment-for-data-processing/</guid><pubDate>Thu, 15 Nov 2018 04:34:28 GMT</pubDate></item></channel></rss>